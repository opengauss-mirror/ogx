[package]
name = "ogx"
version = "0.1.0"
authors = ["Heguofeng<hgf199@126.com>"]
license = "MIT"
description = "ogx:  A Rust framework for creating openGauss extensions"
homepage = "https://gitee.com/Nelson-He/ogx"
repository = "https://gitee.com/Nelson-He/ogx"
documentation = "https://docs.rs/ogx"
categories = ["database"]
keywords = ["database", "openGauss", "extension"]
readme = "../README.md"
edition = "2021"

[lib]
crate-type = [ "rlib" ]

[features]
default = [ ]
og3 = [ "ogx-pg-sys/og3" ]

[package.metadata.docs.rs]
features = ["og3"]
no-default-features = true
# Enable `#[cfg(docsrs)]` (https://docs.rs/about/builds#cross-compiling)
rustc-args = ["--cfg", "docsrs"]

[dependencies]
ogx-macros = { path = "../ogx-macros/", version = "=0.1.0" }
ogx-pg-sys = { path = "../ogx-pg-sys", version = "=0.1.0" }
ogx-utils = { path = "../ogx-utils/", version = "=0.1.0" }

# used to internally impl things
once_cell = "1.15.0" # polyfill until std::lazy::OnceCell stabilizes
quote = "1.0.21" # necessary for ogx's SQL generation
seq-macro = "0.3" # impls loops in macros
uuid = { version = "1.2.1", features = [ "v4" ] } # PgLwLock and shmem

# error handling and logging
eyre = "0.6.8"
thiserror = "1.0"
tracing = "0.1.37"
tracing-error = "0.2.0"

# exposed in public API
atomic-traits = "0.3.0" # PgAtomic and shmem init
bitflags = "1.3.2" # BackgroundWorker
bitvec = "1.0" # processing array nullbitmaps
cstr_core = "0.2.6" # no std compat
heapless = "0.7.16" # shmem and PgLwLock
libc = "0.2.135" # FFI type compat
seahash = "4.1.0" # derive(OgHash)
serde = { version = "1.0.146", features = [ "derive" ] } # impls on pub types
serde_cbor = "0.11.2" # derive(OgType)
serde_json = "1.0.87" # everything JSON
time = { version = "0.3.15", features = ["formatting", "parsing", "alloc", "macros"] } # TODO(0.6.0): add `optional = true`
